buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.6'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            def fileName = "smapl-android-${variant.versionName}.apk"
            output.outputFile = new File(file.parentFile, fileName)
        }
    }

    Properties props = new Properties()
    props.load(new FileInputStream(file("../dummy-sign.properties")))
    signingConfigs {
        release {
            storeFile file('../' + props['store.file'])
            storePassword props['store.password']
            keyAlias props['key.alias']
            keyPassword props['key.password']
        }
    }

    defaultConfig {
        applicationId "com.smapl_android"
        minSdkVersion 19
        targetSdkVersion 25
        versionName buildVersion()
        versionCode buildNumber()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            ext.betaDistributionEmails = "nikolay.dymura@gmail.com"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            versionNameSuffix '.release'
        }
        debug {
            ext.enableCrashlytics = false
            versionNameSuffix '.debug'
        }
    }
    dataBinding {
        enabled = true
    }
    productFlavors {
        dev {
            versionName buildVersion() + '.dev'
        }
        staging {
            versionName buildVersion() + '.staging'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    compile 'com.afollestad.material-dialogs:core:0.9.2.3'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.afollestad.material-dialogs:core:0.9.2.3'
    compile 'com.android.support:design:25.3.1'
    compile 'com.github.bumptech.glide:glide:4.0.0'
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile 'com.google.android.gms:play-services-location:11.2.0'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    compile 'com.google.firebase:firebase-messaging:10.0.1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

def buildVersion() {
    "0." + buildNumber()
}

def buildNumber() {
    if (hasProperty('buildNumber')) {
        println "build number = ${buildNumber}"
        return buildNumber as int
    } else {
        return 23
    }
}

apply plugin: 'com.google.gms.google-services'